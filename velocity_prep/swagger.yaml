swagger: '2.0'
info:
  title: Deploy Info 
  description: DEPLOY INFO API
  version: "1.0.0"
host: tbd
consumes:
  - application/json
produces:
  - application/json
basePath: /v1
paths:
  /prs/:
    get:
      summary: Get a list of all PRs 
      description: Returns a list of all PRs.
      tags:
        - PRs
      operationId: getAllPRs
      responses:
        200:
          description: The result is an array of PRs
          schema: $ref: "#/definitions/PRListModel"
  /prs/{pr_id}:
    get:
      summary: Get a single PR
      description: Returns a single PR based on a PR ID
      operationId: findPRbyID
      tags:
        - PRs
      parameters:
        - name: pr_id
          required: true
          in: path
          description: ID of PR to fetch
          type: integer
      responses:
        200:
          description: PR response
          schema: $ref: "#/definitions/PRModel"
       404:
          description: PR not found.
  /prs/list:
    get:
      summary: Get a list of PRs by date
      description: Returns a list of PRs 
      operationId: findPRsbyDate
      tags:
        - PRs
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of PRs, inclusive
          type: date 
        - name: end
          required: false
          in: query
          description: End date for list of PRs, exclusive
          type: date
      responses:
        200:
          description: An array of PRs for given date range
          schema: $ref: "#/definitions/PRListModel"
  /crs/:
    get:
      summary: Get a list of all CRs
      description: Returns a list of all CRs.
      tags:
        - CRs
      operationId: getAllCRs
      responses:
        200:
          description: The result is an array of CRs
          schema:
            $ref: "#/definitions/CRListModel"
  /crs/{cr_id}:
    get:
      summary: Get a single CR
      description: Returns a single CR based on a CR ID
      operationId: findCRbyID
      tags:
        - CRs
      parameters:
        - name: cr_id
          required: true
          in: path
          description: ID of CR to fetch
          type: integer
      responses:
        200:
          description: CR response
          schema:
            $ref: "#/definitions/CRModel"
       404:
          description: CR not found.
  /crs/list:
    get:
      summary: Get a list of CRs by date
      description: Returns a list of CRs
      operationId: findCRsbyDate
      tags:
        - CRs
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of CRs, inclusive
          type: date
        - name: end
          required: false
          in: query
          description: End date for list of CRs, exclusive
          type: date
      responses:
        200:
          description: An array of CRs for given date range
          schema:
            $ref: "#/definitions/CRListModel"
  /tickets/:
    get:
      summary: Get a list of all tickets
      description: Returns a list of all tickets.
      tags:
        - tickets
      operationId: getAllTickets
      responses:
        200:
          description: The result is an array of tickets
          schema:
            $ref: "#/definitions/TicketListModel"
  /tickets/{ticket_id}:
    get:
      summary: Get a single ticket
      description: Returns a single ticket based on a ticket ID
      operationId: findTicketbyID
      tags:
        - tickets
      parameters:
        - name: ticket_id
          required: true
          in: path
          description: ID of ticket to fetch
          type: integer
      responses:
        200:
          description: ticket response
          schema:
            $ref: "#/definitions/TicketModel"
       404:
          description: ticket not found.
  /tickets/list:
    get:
      summary: Get a list of tickets by date
      description: Returns a list of tickets
      operationId: findTicketsbyDate
      tags:
        - tickets
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of tickets, inclusive
          type: date
        - name: end
          required: false
          in: query
          description: End date for list of tickets, exclusive
          type: date
      responses:
        200:
          description: An array of tickets for given date range
          schema:
            $ref: "#/definitions/TicketListModel"
  /errors/:
    get:
      summary: Get a list of all 500 errors
      description: Returns a list of all 500 errors.
      tags:
        - errors
      operationId: getAll500Errors
      responses:
        200:
          description: The result is an array of 500 errors
          schema:
            $ref: "#/definitions/ErrorListModel"
  /errors/{error_id}:
    get:
      summary: Get a single 500 error
      description: Returns a single error based on a error ID
      operationId: find500ErrorbyID
      tags:
        - errors
      parameters:
        - name: error_id
          required: true
          in: path
          description: ID of 500 error to fetch
          type: integer
      responses:
        200:
          description: error response
          schema:
            $ref: "#/definitions/ErrorModel"
       404:
          description: error not found.
  /errors/list:
    get:
      summary: Get a list of 500 errors by date
      description: Returns a list of 500 errors
      operationId: findErrorsbyDate
      tags:
        - errors
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of errors, inclusive
          type: date
        - name: end
          required: false
          in: query
          description: End date for list of errors, exclusive
          type: date
      responses:
        200:
          description: An array of 500 errors for given date range
          schema:
            $ref: "#/definitions/ErrorListModel"
  /zabbix/:
    get:
      summary: Get a list of all zabbix errors
      description: Returns a list of all zabbix errors.
      tags:
        - zabbix
      responses:
        200:
          description: The result is an array of zabbix errors
          schema:
            $ref: "#/definitions/ZabbixListModel"
  /zabbix/{zabbix_id}:
    get:
      summary: Get a single zabbix error
      description: Returns a single zabbix error based on a zabbix error ID
      operationId: findZabbixbyID
      tags:
        - zabbix
      parameters:
        - name: zabbix_id
          required: true
          in: path
          description: ID of zabbix error to fetch
          type: integer
      responses:
        200:
          description: zabbix response
          schema:
            $ref: "#/definitions/ZabbixModel"
       404:
          description: Zabbix error not found.
  /zabbix/list:
    get:
      summary: Get a list of zabbix errors by date
      description: Returns a list of zabbix errors
      operationId: findZabbixByDate
      tags:
        - zabbix
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of zabbix errors, inclusive
          type: date
        - name: end
          required: false
          in: query
          description: End date for list of zabbix errors, exclusive
          type: date
      responses:
        200:
          description: An array of zabbix errors for given date range
          schema:
            $ref: "#/definitions/ZabbixListModel"
  /deploys/
    get:
      summary: Get a list of all deploys
      description: Returns a list of all deploys.
      tags:
        - deploys
      responses:
        200:
          description: The result is an array of deploys
          schema:
            $ref: "#/definitions/DeployListModel"
  /deploys/list:
    get:
      summary: Get a list of deploys by date
      description: Returns a list of deploys
      operationId: findDeploysbyDate
      tags:
        - deploys
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of deploys, inclusive
          type: date
        - name: end
          required: false
          in: query
          description: End date for list of deploys, exclusive
          type: date
      responses:
        200:
          description: An array of deploys for given date range
          schema:
            $ref: "#/definitions/DeployListModel"
  /deploys/{repo}:
    get:
      summary: Get a list of all deploys for a repo
      description: Returns an array of deploys for a single repo
      operationId: findDeploysByRepo
      tags:
        - deploys, repo
      parameters:
        - name: repo
          required: true
          in: path
          description: Repo name for list of deploys
          type: string
      responses:
        200:
          description: deploy response
          schema:
            $ref: "#/definitions/DeployListModel"
       404:
          description: Repo not found.
  /deploys/{repo}/{version_number}:
    get:
      summary: Get a single deploy with this version number
      description: Returns a single deploy
      operationId: findDeploysByVersion
      tags:
        - deploys, version
      parameters:
        - name: repo
          required: true
          in: path
          description: Repo name for deploy
          type: string
        - name: version
          required: true
          in: path
          description: Version of deploy
          type: string
      responses:
        200:
          description: deploy response
          schema:
            $ref: "#/definitions/DeployModel"
       404:
          description: Version not found.
  /deploys/{repo}/list:
    get:
      summary: Get a list of all deploys for a repo for a given date range
      description: Returns an array of deploys for a single repo and date range
      operationId: findDeploysByRepoAndDate
      tags:
        - deploys, repo
      parameters:
        - name: repo
          required: true
          in: path
          description: Repo name for list of deploys
          type: string
        - name: start
          required: false
          in: query
          description: Start date for list of deploys, inclusive
          type: date
        - name: end
          required: false
          in: query
          description: End date for list of deploys, exclusive
          type: date
      responses:
        200:
          description: deploy response
          schema:
            $ref: "#/definitions/DeployListModel"
       404:
          description: Repo not found.
definitions:
  PRListModel:
    type: object
      results:
      type: array
        items: $ref: "#/definitions/PRModel"
  PRModel:
    type: object
    required:
      - account_id
      - account_name
      - terms
      - contacts

  AccountUpdateModel:
    type: object
    required:
      - account_id
    properties:
      account_id:
        type: integer
      terms:
        type: string
        enum:
          - ON_RECEIPT
          - NET_7
          - NET_15
          - NET_30
          - NET_45
          - NET_55
          - NET_60
      cc_token:
        type: string
      address_line1:
        type: string
      address_line2:
        type: string
      address_city:
        type: string
      address_state:
        type: string
      address_zip:
        type: string
      address_country:
        type: string
      po_number:
        type: string
        maxLength: 100
      tax_exempt_id:
        type: string
        maxLength: 100
      active:
        type: boolean
        defaultValue: true
  AccountModel:
    type: object
    required:
      - account_id
      - account_name
      - terms
      - balance
      - active
    properties:
      account_id:
        type: integer
      account_name:
        type: string
      terms:
        type: string
        enum:
          - ON_RECEIPT
          - NET_7
          - NET_15
          - NET_30
          - NET_45
          - NET_55
          - NET_60
      balance:
        type: string
        maxLength: 9
      cc_token:
        type: string
      contacts:
        type: array
        items:
          $ref: "#/definitions/ContactModel"
      address_line1:
        type: string
      address_line2:
        type: string
      address_city:
        type: string
      address_state:
        type: string
      address_zip:
        type: string
      address_country:
        type: string
      cc_last4:
        type: string
      cc_brand:
        type: string
      cc_exp_month:
        type: integer
      cc_exp_year:
        type: integer
      po_number:
        type: string
        maxLength: 100
      tax_exempt_id:
        type: string
        maxLength: 100
      active:
        type: boolean
        defaultValue: true
      created_on:
        type: string
      updated_on:
        type: string
  AddonListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/AddonModel"
  AddonCreateModel:
    type: object
    required:
      - addon_id
      - name
      - description
      - price
      - plan
      - currency
      - income_account
    properties:
      addon_id:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: string
        maxLength: 10
      plan:
        type: string
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      taxable:
        type: boolean
        defaultValue: true
      price_overridable:
        type: boolean
      active:
        type: boolean
        defaultValue: true
      refundable:
        type: boolean
        defaultValue: true
      income_account:
        type: string
  AddonModel:
    type: object
    required:
      - addon_id
      - name
      - description
      - price
      - plan
      - currency
      - taxable
      - price_overridable
      - active
      - refundable
    properties:
      addon_id:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: string
        maxLength: 10
      plan:
        type: string
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      taxable:
        type: boolean
        defaultValue: true
      price_overridable:
        type: boolean
      active:
        type: boolean
        defaultValue: true
      refundable:
        type: boolean
        defaultValue: true
      created_on:
        type: string
      updated_on:
        type: string
  AddonUpdateModel:
    type: object
    required:
      - addon_id
    properties:
      addon_id:
        type: string
      description:
        type: string
      active:
        type: boolean
        defaultValue: true
  AddonPatchModel:
    type: object
    properties:
      addon_id:
        type: string
      description:
        type: string
      active:
        type: boolean
        defaultValue: true
  AdjustmentReasonListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/AdjustmentReasonModel"
  AdjustmentReasonModel:
    type: object
    required:
      - adjustment_reason_id
      - name
      - description
      - active
    properties:
      adjustment_reason_id:
        type: string
      name:
        type: string
      description:
        type: string
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      active:
        type: boolean
        defaultValue: true
      created_on:
        type: string
      updated_on:
        type: string
  AdjustmentReasonCreateModel:
    type: object
    required:
      - adjustment_reason_id
      - name
      - description
      - active
      - product_name
      - income_account
    properties:
      adjustment_reason_id:
        type: string
      name:
        type: string
      description:
        type: string
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      active:
        type: boolean
        defaultValue: true
      product_name:
        type: string
        enum:
          - Personal
          - Credit
          - Bad Debit
          - Distributed Sites
      income_account:
        type: string
  AdjustmentReasonUpdateModel:
    type: object
    required:
      - adjustment_reason_id
      - name
      - description
      - active
    properties:
      adjustment_reason_id:
        type: string
      name:
        type: string
      description:
        type: string
      active:
        type: boolean
        defaultValue: true
  AdjustmentReasonPatchModel:
    type: object
    properties:
      adjustment_reason_id:
        type: string
      name:
        type: string
      description:
        type: string
      active:
        type: boolean
        defaultValue: true
  CreditModel:
    type: object
    required:
      - adjustment_reason
      - account
      - amount
      - description
    properties:
      adjustment_reason:
        type: string
      account:
        type: integer
      amount:
        type: string
      description:
        type: string
      invoice:
        type: integer
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
  CouponListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/CouponModel"
  ContactCreateModel:
    type: object
    required:
      - email
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      phone:
        type: string
      company:
        type: string
  ContactModel:
    type: object
    required:
      - email
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      phone:
        type: string
      company:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  CouponCreateModel:
    type: object
    required:
      - coupon_id
      - description
      - duration
      - allowed_plans
    properties:
      coupon_id:
        type: string
      description:
        type: string
      duration:
        type: string
        enum:
          - FOREVER
          - ONCE
          - REPEATING
      duration_in_months:
        type: integer
      percent_off:
        type: integer
      amount_off:
        type: number
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      max_redemptions:
        type: integer
      expiration:
        type: string
      origination:
        type: string
      allowed_plans:
        type: array
        items:
          type: string
      active:
        type: boolean
        defaultValue: true
      notes:
        type: string
  CouponModel:
    type: object
    properties:
      coupon_id:
        type: string
      description:
        type: string
      duration:
        type: string
        enum:
          - FOREVER
          - ONCE
          - REPEATING
      duration_in_months:
        type: integer
      percent_off:
        type: integer
      amount_off:
        type: string
        maxLength: 9
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      max_redemptions:
        type: integer
      expiration:
        type: string
      origination:
        type: string
      allowed_plans:
        type: array
        items:
          type: string
      active:
        type: boolean
        defaultValue: true
      notes:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  ReferencesListModel:
    required:
      - duration-types
      - product-names
      - account-terms
      - recurrence-periods
      - countries
    properties:
      currencies:
        $ref: "#/definitions/CurrenciesListModel"
      duration-types:
        $ref: "#/definitions/DurationTypeListModel"
      product-names:
        $ref: "#/definitions/ProductNameListModel"
      account-terms:
        $ref: "#/definitions/AccountTermListModel"
      recurrence-periods:
        $ref: "#/definitions/RecurrencePeriodListModel"
      countries:
        $ref: "#/definitions/CountryListModel"
  CurrenciesListModel:
    type: array
    items:
      type: array
      maxItems: 2
      items:
        type: string
  ProductNameListModel:
    type: array
    items:
      type: array
      maxItems: 2
      items:
        type: string
  DurationTypeListModel:
    type: array
    items:
      type: array
      maxItems: 2
      items:
        type: string
        enum:
          - FOREVER
          - Forever
          - ONCE
          - Once
          - REPEATING
          - Repeating
  AccountTermListModel:
    type: array
    items:
      type: array
      maxItems: 2
      items:
        type: string
        enum:
          - ON_RECEIPT
          - On Receipt
          - NET_7
          - Net 7
          - NET_15
          - Net 15
          - NET_30
          - Net 30
          - NET_45
          - Net 45
          - NET_55
          - Net 55
          - NET_60
          - Net 60
  RecurrencePeriodListModel:
    type: array
    items:
      type: array
      maxItems: 2
      items:
        type: string
        enum:
          - MONTHLY
          - Monthly
          - QUARTERLY
          - Quarterly
          - SEMI_ANNUALLY
          - Semi Annually
          - ANNUALLY
          - Annually
  CountryListModel:
    type: array
    items:
      $ref: '#/definitions/CountryModel'
  CountryModel:
    type: object
    required:
      - iso3
      - name
    properties:
      iso3:
        type: string
      name:
        type: string
  SubdivisionListModel:
    type: array
    items:
      $ref: '#/definitions/SubdivisionModel'
  SubdivisionModel:
    type: object
    required:
      - code
      - name
    properties:
      code:
        type: string
      name:
        type: string
  CurrenciesListModel:
    type: array
    items:
      type: array
      maxItems: 2
      items:
        type: string
        enum:
          - usd
  MeteredProductListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/MeteredProductModel"
  MeteredProductCreateModel:
    type: object
    required:
      - metered_product_id
      - name
      - active
      - taxable
      - income_account
    properties:
      metered_product_id:
        type: string
      name:
        type: string
        maxLength: 25
      active:
        type: boolean
        defaultValue: true
      taxable:
        type: boolean
        defaultValue: true
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      income_account:
        type: string
  MeteredProductUpdateModel:
    type: object
    required:
      - metered_product_id
      - active
    properties:
      metered_product_id:
        type: string
      active:
        type: boolean
        defaultValue: true
  MeteredProductModel:
    type: object
    required:
      - metered_product_id
      - name
      - active
      - taxable
    properties:
      metered_product_id:
        type: string
      name:
        type: string
        maxLength: 25
      active:
        type: boolean
        defaultValue: true
      taxable:
        type: boolean
        defaultValue: true
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      created_on:
        type: string
      updated_on:
        type: string
  MigrationListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/MigrationModel"
  MigrationCreateModel:
    type: object
    required:
      - subscription
      - next_bill_date
    properties:
      id:
        type: integer
      subscription:
        $ref: "#/definitions/SubscriptionCreateModel"
      next_bill_date:
        type: string
        format: date
      coupon_months_remaining:
        type: integer
        minimum: 1
        maximum: 120
  MigrationModel:
    type: object
    required:
      - id
      - url
      - subscription
      - phases
      - next_bill_date
      - completed
      - created_on
      - updated_on
    properties:
      id:
        type: integer
      url:
        type: string
      subscription:
        $ref: "#/definitions/SubscriptionModel"
      phases:
        type: array
        items:
          type: object
          required:
           - task_id
           - name
           - status
          properties:
            task_id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
               - PENDING
               - RUNNING
               - SUCCESS
               - FAILURE
      next_bill_date:
        type: string
        format: date
      coupon_months_remaining:
        type: integer
      completed:
        type: boolean
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
  PlanListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/PlanModel"
  PlanCreateModel:
    type: object
    required:
      - plan_id
      - name
      - description
      - price
      - level
      - recurrence
      - income_account
    properties:
      plan_id:
        type: string
      name:
        type: string
        maxLength: 100
      description:
        type: string
      price:
        type: string
        maxLength: 10
      level:
        type: integer
      recurrence:
        type: string
        enum:
          - MONTHLY
          - QUARTERLY
          - SEMI_ANNUALLY
          - ANNUALLY
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      taxable:
        type: boolean
        defaultValue: true
      price_overridable:
        type: boolean
      active:
        type: boolean
        defaultValue: true
      refundable:
        type: boolean
        defaultValue: true
      income_account:
        type: string
  PlanUpdateModel:
    type: object
    required:
      - plan_id
      - description
      - taxable
      - active
    properties:
      plan_id:
        type: string
      description:
        type: string
      taxable:
        type: boolean
        defaultValue: true
      active:
        type: boolean
        defaultValue: true
  PlanModel:
    type: object
    required:
      - plan_id
      - name
      - description
      - price
      - level
      - recurrence
      - currency
      - taxable
      - price_overridable
      - active
      - refundable
    properties:
      plan_id:
        type: string
      name:
        type: string
        maxLength: 100
      description:
        type: string
      price:
        type: string
        maxLength: 10
      level:
        type: integer
      recurrence:
        type: string
        enum:
          - MONTHLY
          - QUARTERLY
          - SEMI_ANNUALLY
          - ANNUALLY
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      taxable:
        type: boolean
        defaultValue: true
      price_overridable:
        type: boolean
      active:
        type: boolean
        defaultValue: true
      refundable:
        type: boolean
        defaultValue: true
      created_on:
        type: string
      updated_on:
        type: string
  OneTimeItemListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/OneTimeItemModel"
  OneTimeItemCreateModel:
    type: object
    required:
      - one_time_item_id
      - name
      - description
      - price
      - currency
      - income_account
    properties:
      one_time_item_id:
        type: string
      name:
        type: string
        maxLength: 100
      description:
        type: string
      price:
        type: string
        maxLength: 10
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      taxable:
        type: boolean
        defaultValue: true
      active:
        type: boolean
        defaultValue: true
      price_overridable:
        type: boolean
      refundable:
        type: boolean
        defaultValue: true
      income_account:
        type: string
  OneTimeItemUpdateModel:
    type: object
    required:
      - one_time_item_id
      - description
    properties:
      one_time_item_id:
        type: string
      description:
        type: string
      active:
        type: boolean
        defaultValue: true
  OneTimeItemModel:
    type: object
    required:
      - one_time_item_id
      - name
      - description
      - price
      - currency
      - taxable
      - active
      - price_overridable
      - refundable
    properties:
      one_time_item_id:
        type: string
      name:
        type: string
        maxLength: 100
      description:
        type: string
      price:
        type: string
        maxLength: 10
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      taxable:
        type: boolean
        defaultValue: true
      active:
        type: boolean
        defaultValue: true
      price_overridable:
        type: boolean
      refundable:
        type: boolean
        defaultValue: true
      created_on:
        type: string
      updated_on:
        type: string
  SubscriptionListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/SubscriptionModel"
  SubscriptionCreateModel:
    type: object
    required:
      - account
      - plan
    properties:
      account:
        type: integer
      plan:
        type: string
      price:
        type: string
        maxLength: 10
        description: Only applicable if the Plan allows a Price Override
      coupon:
        type: string
      addons:
        type: array
        items:
          $ref: "#/definitions/SubscriptionAddonCreateModel"
      active:
        type: boolean
      started_on:
        type: string
        description: "Need during migration, don't need to set it"
  SubscriptionUpdateModel:
    type: object
    required:
      - plan
      - active
    properties:
      subscription_id:
        type: integer
      plan:
        type: string
      price:
        type: string
        maxLength: 10
        description: Only applicable if the Plan allows a Price Override
      addons:
        type: array
        items:
          $ref: "#/definitions/SubscriptionAddonCreateModel"
  SubscriptionModel:
    type: object
    required:
      - account
      - plan
      - price
      - total_price
      - active
      - started_on
    properties:
      subscription_id:
        type: integer
      account:
        type: integer
      plan:
        type: string
      price:
        type: string
        maxLength: 10
      total_price:
        type: string
        maxLength: 10
        description: "Sums up Plan and Addon prices"
      coupon:
        type: string
      addons:
        type: array
        items:
          $ref: "#/definitions/AddonModel"
      started_on:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
      active:
        type: boolean
        defaultValue: true
  SubscriptionAddonCreateModel:
    type: object
    required:
      - addon
    properties:
      addon:
        type: string
      price:
        type: number
  SubscriptionAddonModel:
    type: object
    required:
      - id
      - addon
      - price
      - subscription
      - created_on
      - updated_on
    properties:
      id:
        type: integer
      addon:
        type: string
      price:
        type: string
      subscription:
        type: integer
      created_on:
        type: string
      updated_on:
        type: string
  PurchaseListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/PurchaseModel"
  PurchaseCreateModel:
    type: object
    required:
      - account
      - one_time_item
    properties:
      account:
        type: integer
      one_time_item:
        type: string
      amount:
        type: string
        maxLength: 10
        description: Only applicable if the One Time Item allows a Price Override
  PurchaseModel:
    type: object
    required:
      - account
      - one_time_item
    properties:
      id:
        type: integer
      account:
        type: integer
      one_time_item:
        type: string
      amount:
        type: string
        maxLength: 10
      tax:
        type: string
        maxLength: 10
      invoice:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  InvoiceItemModel:
    type: object
    required:
      - product_type
      - product_id
      - description
      - item_price
      - subtotal
    properties:
      id:
        type: integer
      product_type:
        type: integer
      product_id:
        type: string
      description:
        type: string
      item_price:
        type: string
        maxlength: 9
      subtotal:
        type: string
        maxlength: 9
      tax:
        type: string
      applied_coupon:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  InvoiceListModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/InvoiceListEntryModel"
  InvoiceListWithInvoiceItemsModel:
    type: object
    required:
      - count
      - results
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/InvoiceModel"
  InvoiceListEntryModel:
    type: object
    required:
      - account
      - due_on
      - balance
      - total
    properties:
      id:
        type: integer
      account:
        type: integer
      subscription:
        type: integer
      due_on:
        type: string
      closed_on:
        type: string
      balance:
        type: string
      total:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  InvoiceModel:
    type: object
    required:
      - account
      - due_on
      - balance
      - total
    properties:
      id:
        type: integer
      account:
        type: integer
      subscription:
        type: integer
      due_on:
        type: string
      closed_on:
        type: string
      balance:
        type: string
      total:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
      invoice_items:
        type: array
        items:
          $ref: "#/definitions/InvoiceItemModel"
  DebitModel:
    type: object
    required:
      - adjustment_reason
      - account
      - amount
      - description
    properties:
      id:
        type: integer
      adjustment_reason:
        type: string
      account:
        type: integer
      amount:
        type: string
        maxLength: 10
      description:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  PaymentModel:
    type: object
    required:
      - invoice
    properties:
      invoice:
        type: integer
      amount:
        type: string
        maxLength: 10
      currency:
        type: string
        maxLength: 3
        enum:
          - usd
      check_number:
        type: string
        maxLength: 100
      wire_number:
        type: string
        maxLength: 100
      bank_fee:
        type: string
        maxLength: 10
      applied_on:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
  UsageEventCreateModel:
    type: object
    required:
      - subscription
      - metered_product
      - rate
      - quantity
      - description
    properties:
      subscription:
        type: integer
      metered_product:
        type: string
      rate:
        type: string
      quantity:
        type: integer
      description:
        type: string
        maxLength: 250
  UsageEventModel:
    type: object
    required:
      - id
      - subscription
      - metered_product
      - rate
      - quantity
      - description
    properties:
      id:
        type: integer
      subscription:
        type: integer
      metered_product:
        type: string
      invoice:
        type: integer
      rate:
        type: string
        maxLength: 10
      quantity:
        type: integer
      description:
        type: string
        maxLength: 250
      created_on:
        type: string
      updated_on:
        type: string

